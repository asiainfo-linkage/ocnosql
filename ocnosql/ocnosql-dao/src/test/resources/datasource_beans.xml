<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd"
	default-autowire="byName">
	<tx:annotation-driven transaction-manager="transactionManager" />
	<aop:aspectj-autoproxy />
	<bean id="datasource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${db.driverClassName}" />
		<property name="url" value="${db.url}" />
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />
		<property name="maxActive" value="5" />
		<property name="maxIdle" value="3" />
		<property name="minIdle" value="2" />
		<property name="maxWait" value="2" />
		<property name="initialSize" value="1" />
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="180" />
		<property name="logAbandoned" value="true" />
	</bean>
	<!-- hibernate的sessionFactory配置 -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="datasource" />
		<property name="packagesToScan">
			<list>
				<value>com.ailk.oci.ocnosql.*.domains</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${db.dialect}</prop>
				<!-- 开启二级缓存 -->
				<prop key="cache.use_second_level_cache">true</prop>
				<!-- 开启查询缓存 -->
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<!-- 配置RegionFactory为Ehcache的RegionFactory -->
				<prop key="hibernate.cache.region.factory_class">${hiberante.cacheProvider}</prop>
				<prop key="hibernate.show_sql">${show_sql}</prop>
			</props>
		</property>
	</bean>
	<bean id="hbaseDataSource"
		class="com.ailk.oci.ocnosql.dao.hbase.HbaseDataSource" init-method="init">
		<property name="zkHost" value="${hbase.zookeeper.quorum}" />
		<property name="zkClientPort" value="${hbase.zookeeper.property.clientPort}" />
		<property name="tablePoolMaxSize" value="${hbase.table.pool.max.size}" />
	</bean>
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	<!--基于AOP事务管理 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="list*" rollback-for="Exception"
				propagation="REQUIRED" />
			<tx:method name="get*" rollback-for="Exception"
				propagation="REQUIRED" />
			<tx:method name="create*" rollback-for="Exception"
				propagation="REQUIRED" />
			<tx:method name="save*" rollback-for="Exception"
				propagation="REQUIRED" />
			<tx:method name="delete*" rollback-for="Exception"
				propagation="REQUIRED" />
			<tx:method name="update*" rollback-for="Exception"
				propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<!-- 切入点 -->
		<aop:pointcut id="dao" expression="execution(* com..*.dao..*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="dao" />
	</aop:config>
	
</beans>